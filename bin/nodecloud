#!/usr/bin/env node
// Welcome to the NodeCloud-CLI!
// Selling this product is not allowed.
DEBUGGABLE = false; // recomendable no use for spaming reasons

// Childer starter of the CLI.
process.argv[0] = process.cwd(); // Defines where the command called default is node.exe path.
process.argv[1]; // <- [...]/bin/nodecloud
process.argv[1] = __dirname.replace("\\", "/") + "/.."; // <- nodecloud-root

const { exec } = require("child_process");
const package = require("../package.json");
const toolbox = require("gluegun");

const title = "NodeCloud-CLI [BIN]";
/*
// Check last Versions
const child_process = require("child_process");
checkVersions = () => {
  return new Promise((resolve, reject) => {
    child = child_process.exec(`npm view ${package.name} version`);
    child.stderr.on("data", (err) => {
      toolbox.print.warning(`NPM CHECK VERSION ERROR:\n${err}`);
      resolve();
    });
    child.stdout.on("data", (newVersion) => {
      newVersion = newVersion.replace("\n", "");

      if (newVersion != package.version) {
        toolbox.print.warning(
          `Warning: new version of ${package.name}: "${newVersion}", use 'nodecloud update' or 'npm install -g ${package.name}@latest'`
        );
      }
      resolve();
    });
  });
};
*/
main = async () => {
  //await checkVersions();
  exec("title " + title);
  exec(`$host.UI.RawUI.WindowTitle = "${title}"`);

  // Render in cli.js
  require("../src/cli")
    .cli(process.argv, {
      child_proccess: require("child_process"),
    })
    .then((result) => {
      if (DEBUGGABLE && result != null) {
        toolbox.print.info("Debug:");
        toolbox.print.info("-".repeat(70));
        toolbox.print.warning("Warning: Responses Debug are Enabled!");
        toolbox.print.warning(
          toolbox.print.colors.bgRed("[INSECURE]") +
            ": Private information may appear! Be careful! (This has NO!! filters)"
        );
        toolbox.print.debug(result, "RenderResult");
      }
    });
};

main();
